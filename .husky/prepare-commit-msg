#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

exec < /dev/tty
BRANCH_NAME=$(git symbolic-ref --short HEAD)

LOGOUT="logout"
LOGIN="login"
JIRA_LOGIN_STATUS=$LOGOUT
SESSION_FILE_DIR="./.husky/_/jira_session.txt"
touch $SESSION_FILE_DIR
SESSION_ID=$(cat $SESSION_FILE_DIR)

if [[ "$SESSION_ID" != "" ]]
then 
  echo "[JIRA] check jira login status..."
  AUTH_RESULT=$(curl -s -w "%{http_code}" --request GET -H "Content-Type:application/json" --cookie "JSESSIONID=${SESSION_ID}" https://jira.104.com.tw/rest/auth/1/session)
  AUTH_HTTP_CODE=${AUTH_RESULT: -3}
  if test $AUTH_HTTP_CODE -eq 200
  then 
    echo "\033[32m[JIRA] jira already login!\033[0m"
    JIRA_LOGIN_STATUS=$LOGIN
  else
    echo "\033[31m[JIRA] jira session expired, please login again!\033[0m"
    JIRA_LOGIN_STATUS=$LOGOUT
  fi
fi

if [[ "$JIRA_LOGIN_STATUS" == "$LOGOUT" ]]
then
  read -p "jira username: " JIRA_USERNAME
  read -s -p "jira password: " JIRA_PASSWORD
  echo "\n[JIRA] login jira..."

  LOGIN_PAYLOAD="{\"username\": \"${JIRA_USERNAME}\", \"password\": \"${JIRA_PASSWORD}\"}"
  LOGIN_RESULT=$(curl -s -w "%{http_code}" --request POST -H "Content-Type:application/json" https://jira.104.com.tw/rest/auth/1/session --data "${LOGIN_PAYLOAD}")
  LOGIN_HTTP_CODE=${LOGIN_RESULT: -3}

  if test $LOGIN_HTTP_CODE -eq 200
  then
    JIRA_LOGIN_STATUS=$LOGIN
    SESSION_REGEX="\"value\":(\"\w*\")"
    SESSION_ID=$(echo $LOGIN_RESULT | grep -Eo $SESSION_REGEX | cut -d: -f2)
    printf $SESSION_ID > $SESSION_FILE_DIR
    echo "\033[32m[JIRA] jira login success!\033[0m"
  else
    JIRA_LOGIN_STATUS=$LOGOUT
    echo "\033[31m[JIRA] jira login fail!\033[0m"
    exit 1
  fi
fi

if [[ "$JIRA_LOGIN_STATUS" == "$LOGIN" ]]
then
  echo "[JIRA] searching jira issue..."
  ISSUE_RESULT=$(curl -s -w "%{http_code}" --request GET -H "Content-Type:application/json" --cookie "JSESSIONID=${SESSION_ID}" "https://jira.104.com.tw/rest/api/2/issue/${BRANCH_NAME}?fields=summary")
  ISSUE_HTTP_CODE=${ISSUE_RESULT: -3}

  if test $ISSUE_HTTP_CODE -eq 200
  then
    ISSUE_REGEX="\"summary\":\"(.*?)\""
    ISSUE_TITLE=$(echo $ISSUE_RESULT | grep -Eo $ISSUE_REGEX | cut -d: -f2)
    ISSUE_TITLE="${ISSUE_TITLE%\"}"
    ISSUE_TITLE="${ISSUE_TITLE#\"}"
    sed -i .bak -e "1s/^/${BRANCH_NAME} ${ISSUE_TITLE}/" $1
  else
    echo "\033[31m[JIRA] can not found matched issue!\033[0m"
    exit 0
  fi
fi


